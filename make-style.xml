<?xml version="1.0" encoding="UTF-8"?>

<style xmlns="http://sweatygarlic.hp.infoseek.co.jp/ns/style-xml">
  <head>
    <set id="compile_rule"><get id="src_ext" /><get id="obj_ext" /> :</set>
    <set id="resource_compile_command">rc -R $&lt;</set>
    <set id="make_name">make</set>

    <ifdef id="nmake">
      <set id="compile_rule"><get id="src_ext" /><get id="obj_ext" /> ::</set>
      <set id="resource_compile_command">rc $&lt;</set>
      <set id="make_name">nmake</set>
    </ifdef>

    <ifdef id="is_vclinker">
      <set id="resource_compile_command">rc $&lt;</set>
    </ifdef>

    <set id="compile_command">
      $(DC) -c -g -op -debug $(COMPILE_FLAG) $(FLAG) $&lt;
    </set>
    <set id="link_command">
      $(DC) -g $(LINK_FLAG) $(FLAG) -of$@ $**
    </set>
    <set id="debug_all_command">
      $(DC) -g -debug -of$(TARGET) $(COMPILE_FLAG) $(LINK_FLAG) $(TO_COMPILE) $(EXT_LIB) $(FLAG)
    </set>
    <set id="release_command">
      $(DC) -release -O -inline -of$(TARGET) $(COMPILE_FLAG) $(LINK_FLAG) $(TO_COMPILE) $(EXT_LIB) $(FLAG)
    </set>
    <ifndef id="is_lib"><ifndef id="is_dll">
      <set id="run_command">$(TARGET) $(FLAG)</set>
    </ifndef></ifndef>

    <ifdef id="gui">
      <add id="compile_flag">-version=Unicode -version=WindowsVista</add>
      <ifndef id="is_vclinker">
        <set id="release_command">
          $(DC) -release -O -inline -L/exet:nt/su:windows:6.0 -of$(TARGET) $(COMPILE_FLAG) $(LINK_FLAG) $(TO_COMPILE) $(EXT_LIB) $(FLAG)
        </set>
      </ifndef>
      <ifdef id="is_vclinker">
        <set id="release_command">
          $(DC) -release -O -inline -L/SUBSYSTEM:WINDOWS,6.0 -of$(TARGET) $(COMPILE_FLAG) $(LINK_FLAG) $(TO_COMPILE) $(EXT_LIB) $(FLAG)
        </set>
      </ifdef>
    </ifdef>

    <ifdef id="is_dll">
      <set id="gui">defined</set>
      <add id="compile_flag">-version=Unicode -version=WindowsVista</add>
      <set id="compile_command">
        $(DC) -c -g -op $(COMPILE_FLAG) $(FLAG) $&lt;
      </set>
      <set id="link_command">
        $(DC) -g -map -L/IMPLIB -of$(TARGET) $(LINK_FLAG)  $(EXT_LIB) $(TO_LINK) $(DEF_FILE) $(FLAG)
      </set>
      <set id="release_command">
        $(DC) -op -release -O -inline -map -L/IMPLIB -of$(TARGET) $(LINK_FLAG) $(EXT_LIB) $(COMPILE_FLAG) $(TO_COMPILE) $(FLAG)
      </set>
    </ifdef>

    <ifdef id="is_lib">
      <set id="compile_command">
        $(DC) -c -g -op $(COMPILE_FLAG) $(FLAG) $&lt;
      </set>
      <set id="link_command">lib -c $(FLAG) $@ $**</set>
      <set id="release_command">
        $(DC) -c -op -release -O -inline -lib -of$(TARGET) $(COMPILE_FLAG) $(LINK_FLAG) $(EXT_LIB) $(TO_COMPILE) $(FLAG)
      </set>
    </ifdef>

    <set id="del_command">del</set>

    <ifdef id="gmake">
      <set id="compile_rule">%<get id="obj_ext"/> : %<get id="src_ext" /></set>
      <set id="link_command">
        $(DC) -g -of$@ $(LINK_FLAG) $(TO_LINK) $(FLAG)
      </set>
      <set id="del_command">rm</set>
    </ifdef>
  </head>

  <environment compiler="dmd" id="make">
    <body>
      <ifdef id="nmake">
        ## for nmake of WindowsSDK<br/>
        ## DOT DIRECTIVE<br />
        .SUFFIXES : .d<br />
      </ifdef>
      <ifdef id="gmake">
        ## for gnu make<br/>
        ## DOT DIRECTIVE<br />
        .PHONY : release clean show remake install run edit clean_obj vwrite debug-all ddoc debug l10n-init l10n-init-po l10n-update l10n<br />

      </ifdef>
      ## MACRO<br/>
      TARGET = <get id="target" /><br />
      PROJECT = <get id="target" setExtension="" /><br />
      VERSION = <get id="v" /><br />

      <br />
      MAKEFILE = <get id="m" /><br />
      DC = dmd<br />
      MAKE = <get id="make_name" /><br />
      <ifdef id="gettext">
        XGETTEXT = xgettext<br />
        MSGINIT = msginit<br />
        MSGFMT = msgfmt<br />
      </ifdef>
      TO_COMPILE = <get id="to_compile" /><br />
      <ifdef id="rc">
        TO_LINK = <get id="to_link" /> <get id="rc" from=".rc" to=".res" /><br />
      </ifdef>
      <ifndef id="rc">
        TO_LINK = <get id="to_link" /><br />
      </ifndef>
      <ifdef id="rc">
        RC_FILE = <get id="rc" /><br />
        RES_FILE = <get id="rc" from=".rc" to=".res" /><br />
      </ifdef>
      COMPILE_FLAG = <get id="compile_flag" /><br />
      LINK_FLAG = <get id="link_flag" /><br />
      EXT_LIB = <get id="libs" /><br />
      <ifdef id="is_dll">
        DEF_FILE = <get id="def_file"/><br/>
      </ifdef>
      <ifdef id="ddoc">
        DDOC_FILE = <get id="ddoc" /><br />
        DOC_FILES = <get id="to_compile" from=".d" to=".html" /><br />
        DOC_HEADER = <get id="doch" /><br />
        DOC_FOOTER = <get id="docf" /><br />
        DOC_TARGET = <get id="dd" />/index.html<br />
      </ifdef>
      FLAG = <br/>
      <br/>
      ## LINK COMMAND<br />
      $(TARGET) : $(TO_LINK) $(EXT_LIB)<br />
      <tab /><get id="link_command"/><br />
      <br />
      ## COMPILE RULE<br />
      <get id="compile_rule"/><br />
      <tab /><get id="compile_command"/><br />

      <ifdef id="rc">
        .rc.res :<br/>
        <tab/><get id="resource_compile_command"/><br/>
      </ifdef>

      <br />

      ## DEPENDENCE<br />
      $(TO_LINK) : $(MAKEFILE) $(EXT_LIB)<br />
      <get id="dependencies" /><br/>
      <br />

      ## PHONY TARGET<br />
      <ifdef id="debug_all_command">
        debug-all : <ifdef id="rc">$(RES_FILE)</ifdef><br />
        <tab /><get id="debug_all_command" /> <ifdef id="rc">$(RES_FILE)</ifdef> <br />
      </ifdef>
      <ifdef id="release_command">
        release : <ifdef id="rc">$(RES_FILE)</ifdef><br />
        <tab /><get id="release_command"/> <ifdef id="rc">$(RES_FILE)</ifdef> <br />
      </ifdef>

      clean : <br />
      <tab /><get id="del_command" /> $(TARGET) $(TO_LINK)<br />

      clean_obj :<br/>
      <tab/><get id="del_command" /> $(TO_LINK)<br/>

      vwrite :<br/>
      <tab/>vwrite --setversion &quot;$(VERSION)&quot; $(TO_COMPILE)<br/>

      ddoc :<br/>
      <tab/>$(DC) -c -o- -op -D $(COMPILE_FLAG) $(DDOC_FILE) $(TO_COMPILE) $(FLAG)<br/>
      <tab/>@type $(DOC_HEADER) $(DOC_FILES) $(DOC_FOOTER) > $(DOC_TARGET) 2>nul<br/>
      <tab/>@del $(DOC_FILES)<br />

      show :<br />
      <tab />@echo ROOT = <get id="root"/><br/>
      <tab />@echo TARGET = $(TARGET)<br />
      <tab />@echo VERSION = <get id="v"/><br/>

      <ifndef id="lib">
        run :<br/>
        <tab/>$(TARGET) $(FLAG)<br/>
      </ifndef>

      remake :<br />
      <tab /><get id="remake_command" /> $(FLAG)<br />
      <br/>
      debug :<br />
      <tab />ddbg $(TARGET)<br />
      <br />
      <br />
      l10n-init:<br />
      <tab />xgettext -k_ --from-code=UTF-8 --language=C $(TO_COMPILE) -o l10n\$(PROJECT)\message.pot<br />
      <br />
      l10n-init-po:<br />
      <tab />msginit --locale=ja_JP.UTF-8 -i l10n\$(PROJECT)\message.pot -o l10n\$(PROJECT)\ja.po --no-translator<br />
      <br />
      l10n-update:<br />
      <tab />xgettext -k_ --from-code=UTF-8 --language=C $(TO_COMPILE) -o l10n\$(PROJECT)\message.pot<br />
      <tab />msgmerge --update l10n\$(PROJECT)\ja.po l10n\$(PROJECT)\message.pot<br />
      <br />
      l10n:<br />
      <tab />msgcat --no-location --output l10n\$(PROJECT)\ja.nolocation.po l10n\$(PROJECT)\ja.po<br />
      <tab />msgfmt l10n\$(PROJECT)\ja.nolocation.po -o l10n\$(PROJECT)\ja.mo<br />
      <br />

      <get id="footer"/></body>
  </environment>

</style>
