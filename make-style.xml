<?xml version="1.0" encoding="UTF-8"?>

<style xmlns="http://sweatygarlic.hp.infoseek.co.jp/ns/style-xml">
	<head>
		<set id="compile_rule"><get id="src_ext" /><get id="obj_ext" /> :</set>
		<set id="resource_compile_command">rc -R $&lt;</set>
		<set id="make_name">make</set>

		<ifdef id="nmake">
			<set id="compile_rule"><get id="src_ext" /><get id="obj_ext" /> ::</set>
			<set id="resource_compile_command">rc $&lt;</set>
			<set id="make_name">nmake</set>
		</ifdef>

		<set id="compile_command">
			dmd -c -g -op -debug $(COMPILE_FLAG) $(FLAG) $&lt;
		</set>
		<set id="link_command">
			dmd -g $(LINK_FLAG) $(FLAG) $(EXT_LIB) -of$@ $**
		</set>
		<set id="debug_all_command">
			dmd -g -debug -of$(TARGET) $(COMPILE_FLAG) $(LINK_FLAG) $(TO_COMPILE) $(EXT_LIB)
		</set>
		<set id="release_command">
			dmd -release -O -inline -of$(TARGET) $(COMPILE_FLAG) $(LINK_FLAG) $(TO_COMPILE) $(EXT_LIB)
		</set>
		<ifndef id="is_lib"><ifndef id="is_dll">
				<set id="run_command">$(TARGET) $(FLAG)</set>
		</ifndef></ifndef>

		<ifdef id="gui">
			<add id="compile_flag">-version=Unicode -version=WindowsVista</add>
			<set id="release_command">
				dmd -release -O -inline -L/exet:nt/su:windows:6.0 -of$(TARGET) $(COMPILE_FLAG) $(LINK_FLAG) $(TO_COMPILE) $(EXT_LIB)
			</set>
		</ifdef>

		<ifdef id="is_dll">
			<set id="gui">defined</set>
			<add id="compile_flag">-version=Unicode -version=WindowsVista</add>
			<set id="compile_command">
				dmd -c -g -op $(COMPILE_FLAG) $(FLAG) $&lt;
			</set>
			<set id="link_command">
				dmd -g -map -L/IMPLIB -of$(TARGET) $(LINK_FLAG)  $(EXT_LIB) $(TO_LINK) $(DEF_FILE) $(FLAG)
			</set>
			<set id="release_command">
				dmd -op -release -O -inline -map -L/IMPLIB -of$(TARGET) $(LINK_FLAG) $(EXT_LIB) $(COMPILE_FLAG) $(TO_COMPILE) $(FLAG)
			</set>
		</ifdef>

		<ifdef id="is_lib">
			<set id="compile_command">
				dmd -c -g -op $(COMPILE_FLAG) $(FLAG) $&lt;
			</set>
			<set id="link_command">lib -c $@ $**</set>
			<set id="release_command">
				dmd -c -op -release -O -inline -lib -of$(TARGET) $(COMPILE_FLAG) $(LINK_FLAG) $(EXT_LIB) $(TO_COMPILE) $(FLAG)
			</set>
		</ifdef>

		<ifdef id="gmake">
			<set id="make_name">gmake</set>
			<set id="compile_rule">%.<get id="obj_ext"/> : %<get id="src_ext" /></set>
			<set id="link_command">
				dmd -of$@ $(LINK_FLAG) $(TO_LINK) $(EXT_LIB)
			</set>
		</ifdef>
	</head>

	<environment compiler="dmd" id="make">
		<body>
			<ifdef id="nmake">
				## for nmake of WindowsSDK<br/>
				## DOT DIRECTIVE<br />
				.SUFFIXES : .d<br />
			</ifdef>
			<ifdef id="gmake">
				## for gnu make<br/>
				## DOT DIRECTIVE<br />
				.PHONY : release clean show remake install run edit clean_obj vwrite<br />
				
			</ifdef>
			## MACRO<br/>
			TARGET = <get id="target" /><br />
			MAKE = <get id="make_name" /><br />
			MAKEFILE = <get id="m" /><br />
			TO_COMPILE = <get id="to_compile" /><br />
			<ifdef id="rc">
				TO_LINK = <get id="to_link" /> <get id="rc" from=".rc" to=".res" /><br />
			</ifdef>
			<ifndef id="rc">
				TO_LINK = <get id="to_link" /><br />
			</ifndef>
			<ifdef id="rc">
				RC_FILE = <get id="rc" /><br />
				RES_FILE = <get id="rc" from=".rc" to=".res" /><br />
			</ifdef>
			COMPILE_FLAG = <get id="compile_flag" /><br />
			LINK_FLAG = <get id="link_flag" /><br />
			EXT_LIB = <get id="libs" /><br />
			<ifdef id="is_dll">
				DEF_FILE = <get id="def_file"/><br/>
			</ifdef>
			DDOC_FILE = <get id="ddoc_file"/><br/>
			FLAG = <br/>
			<br/>
			## LINK COMMAND<br />
			$(TARGET) : $(TO_LINK) $(EXT_LIB)<br />
			<tab /><get id="link_command"/><br />
			<br />
			## COMPILE RULE<br />
			<get id="compile_rule"/><br />
			<tab /><get id="compile_command"/><br />

			<ifdef id="gui"><ifdef id="rc">
					.rc.res :<br/>
					<tab/><get id="resource_compile_command"/><br/>
			</ifdef></ifdef>

			<br />

			## DEPENDENCE<br />
			$(TO_LINK) : $(MAKEFILE) $(EXT_LIB)<br />
			<get id="dependencies" /><br/>
			<br />

			## PHONY TARGET<br />
			<ifdef id="debug_all_command">
				debug-all : <ifdef id="rc">$(RES_FILE)</ifdef><br />
				<tab /><get id="debug_all_command" /> <ifdef id="rc">$(RES_FILE)</ifdef> $(FLAG)<br />
			</ifdef>
			<ifdef id="release_command">
				release : <ifdef id="rc">$(RES_FILE)</ifdef><br />
				<tab /><get id="release_command"/> <ifdef id="rc">$(RES_FILE)</ifdef> $(FLAG)<br />
			</ifdef>

			clean : <br />
			<tab />del $(TARGET) $(TO_LINK)<br />

			clean_obj :<br/>
			<tab/>del $(TO_LINK)<br/>

			vwrite :<br/>
			<tab/>vwrite -ver=&quot;<get id="v"/>&quot; -prj=$(TARGET) $(TO_COMPILE)<br/>

			ddoc :<br/>
			<tab/>dmd -c -o- -op -D -Dd<get id="dd"/> $(COMPILE_FLAG) $(DDOC_FILE) $(TO_COMPILE) $(FLAG)<br/>

			show :<br />
			<tab />@echo ROOT = <get id="root"/><br/>
			<tab />@echo TARGET = $(TARGET)<br />
			<tab />@echo VERSION = <get id="v"/><br/>

			<ifndef id="lib">
				run :<br/>
				<tab/>$(TARGET) $(FLAG)<br/>
			</ifndef>

			edit :<br/>
			<tab/>emacs $(TO_COMPILE) <ifdef id="rc">$(RC_FILE)</ifdef> <get id="makefile"/><br/>

			remake :<br />
			<tab /><get id="remake_command" /> $(FLAG)<br />
			<br/>
			debug :<br />
			<tab />ddbg $(TARGET)<br />
			<br />
		<get id="footer"/></body>
	</environment>

</style>
